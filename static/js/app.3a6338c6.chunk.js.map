{"version":3,"sources":["constants/Colors.js","components/TabBarIcon.js","constants/SocketsConfig.js","components/Light.js","components/Lights.js","components/StatusBar.js","components/Button.js","components/Buttons.js","screens/HomeScreen.js","screens/LinksScreen.js","navigation/BottomTabNavigator.js","App.js","navigation/useLinking.js","web-build/register-service-worker.js","assets/fonts/SpaceMono-Regular.ttf"],"names":["TabBarIcon","props","Ionicons","name","size","style","marginBottom","color","focused","Colors","Light","state","on","bri","View","flex","alignSelf","flexDirection","Text","backgroundColor","Math","round","navigationOptions","header","StyleSheet","create","container","contentContainer","paddingTop","Lights","useState","lights","setLights","toRender","setToRender","useSocketIO","SocketConfig","onOpen","console","log","share","shouldReconnect","closeEvent","onError","e","error","onClose","onMessage","event","data","JSON","parse","sensor","sendJsonMessage","lastJsonMessage","readyState","getWebSocket","useEffect","tmp","map","l","push","key","id","nalme","styles","contentContainerStyle","width","alignItems","justifyContent","uptimes","setUptimes","time","floor","macAddress","filter","warn","tabBarInfoContainer","tabBarInfoText","position","bottom","left","right","Platform","select","ios","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","android","elevation","paddingVertical","fontSize","textAlign","MyButton","Button","title","onPress","send","Date","now","Buttons","HomeScreen","btnRed","setBtnRed","btnBlue","setBtnBlue","btnGreen","setBtnGreen","btnWhite","setBtnWhite","btnBlack","setBtnBlack","btnYellow","setBtnYellow","getStartedContainer","getStartedText","lineHeight","developmentModeText","welcomeContainer","marginTop","welcomeImage","resizeMode","marginLeft","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","borderRadius","paddingHorizontal","navigationFilename","helpContainer","helpLink","helpLinkText","LinksScreen","OptionButton","icon","label","WebBrowser","isLastOption","option","lastOption","optionIconContainer","optionTextContainer","optionText","marginRight","borderWidth","hairlineWidth","borderBottomWidth","borderColor","BottomTab","createBottomTabNavigator","BottomTabNavigator","navigation","route","setOptions","headerTitle","getHeaderTitle","Navigator","initialRouteName","Screen","component","options","tabBarIcon","routes","index","Stack","createStackNavigator","App","React","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","getInitialState","useLinking","prefixes","Linking","makeUrl","config","Root","path","screens","Home","Links","Settings","a","async","SplashScreen","preventAutoHide","Font","font","require","hide","skipLoadingScreen","OS","StatusBar","barStyle","NavigationContainer","ref","initialState","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","module","exports"],"mappings":"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","file":"static/js/app.3a6338c6.chunk.js","sourcesContent":["const tintColor = '#2f95dc';\n\nexport default {\n  tintColor,\n  tabIconDefault: '#ccc',\n  tabIconSelected: tintColor,\n  tabBar: '#fefefe',\n  errorBackground: 'red',\n  errorText: '#fff',\n  warningBackground: '#EAEB5E',\n  warningText: '#666804',\n  noticeBackground: tintColor,\n  noticeText: '#fff',\n};\n","import * as React from 'react';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport Colors from '../constants/Colors';\n\nexport default function TabBarIcon(props) {\n  return (\n    <Ionicons\n      name={props.name}\n      size={30}\n      style={{ marginBottom: -3 }}\n      color={props.focused ? Colors.tabIconSelected : Colors.tabIconDefault}\n    />\n  );\n}\n","export default {\n  url: \"ws://192.168.1.29:3000/\"\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { useSocketIO } from \"react-use-websocket\";\nimport SocketConfig from \"../constants/SocketsConfig\";\n\nexport default function Light(props) {\n  const {\n    name,\n    state: { on, bri }\n  } = props;\n  return (\n    <View style={{ flex: 1, alignSelf: \"stretch\", flexDirection: \"row\" }}>\n      <View\n        style={{\n          flex: 1,\n          alignSelf: \"stretch\"\n        }}\n      >\n        <Text>{name}</Text>\n      </View>\n      <View\n        style={{\n          flex: 1,\n          alignSelf: \"stretch\"\n        }}\n      >\n        <Text\n          style={on ? { backgroundColor: \"green\" } : { backgroundColor: \"red\" }}\n        >\n          {on ? \"true\" : \"false\"}\n        </Text>\n      </View>\n      <View\n        style={{\n          flex: 1,\n          alignSelf: \"stretch\"\n        }}\n      >\n        <Text>{Math.round((bri * 100) / 255, 2)}%</Text>\n      </View>\n    </View>\n  );\n}\n\nLight.navigationOptions = {\n  header: null\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  contentContainer: {\n    paddingTop: 30\n  }\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { useSocketIO } from \"react-use-websocket\";\nimport SocketConfig from \"../constants/SocketsConfig\";\nimport Light from \"./Light\";\n\nexport default function Lights() {\n  const [lights, setLights] = useState([]);\n  const [toRender, setToRender] = useState([]);\n\n  const {\n    sendJsonMessage,\n    lastJsonMessage,\n    readyState,\n    getWebSocket\n  } = useSocketIO(SocketConfig.url, {\n    onOpen: () => console.log(\"opened Lights\"),\n    share: () => true,\n    shouldReconnect: closeEvent => true,\n    onError: e => console.error,\n    onClose: e => console.log,\n    onMessage: event => {\n      const data = JSON.parse(event.data);\n      if (data.event == \"answer\" && data.sensor == \"lights\") {\n        console.log(data.state);\n        setLights(data.state);\n      }\n    }\n  });\n\n  useEffect(\n    () =>\n      sendJsonMessage({ event: \"ask\", sensor: \"universe\", state: \"lights\" }),\n    []\n  );\n\n  useEffect(() => {\n    const tmp = [];\n    lights.map(l => {\n      tmp.push(<Light key={l.id} name={l.nalme} state={l.state} />);\n    });\n    setToRender(tmp);\n  }, [lights]);\n\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View\n          style={{\n            flex: 1,\n            width: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          }}\n        >\n          <View style={{ flex: 1, alignSelf: \"stretch\", flexDirection: \"row\" }}>\n            <View\n              style={{\n                flex: 1,\n                alignSelf: \"stretch\"\n              }}\n            >\n              <Text>Nom</Text>\n            </View>\n            <View\n              style={{\n                flex: 1,\n                alignSelf: \"stretch\"\n              }}\n            >\n              <Text>On</Text>\n            </View>\n            <View\n              style={{\n                flex: 1,\n                alignSelf: \"stretch\"\n              }}\n            >\n              <Text>Power</Text>\n            </View>\n          </View>\n          {toRender}\n        </View>\n      </ScrollView>\n    </View>\n  );\n}\n\nLights.navigationOptions = {\n  header: null\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  contentContainer: {\n    paddingTop: 30\n  }\n});\n","import React, { useRef, useState } from \"react\";\nimport { Platform, StyleSheet, Text, View } from \"react-native\";\nimport { useSocketIO } from \"react-use-websocket\";\nimport SocketConfig from \"../constants/SocketsConfig\";\n\nexport default function() {\n  const [uptimes, setUptimes] = useState([]);\n  const {\n    sendJsonMessage,\n    lastJsonMessage,\n    readyState,\n    getWebSocket\n  } = useSocketIO(SocketConfig.url, {\n    onOpen: () => console.log(\"opened StatusBar\"),\n    shouldReconnect: closeEvent => true,\n    share: () => true,\n    onError: e => console.error,\n    onClose: e => console.log,\n    onMessage: event => {\n      const data = JSON.parse(event.data);\n      switch (data.event) {\n        case \"heartbeat\":\n          const time = Math.floor(data.time / 1000);\n          setUptimes([\n            {\n              name: data.macAddress,\n              time: Math.floor(time / 60) + \"min \" + (time % 60) + \"s\"\n            },\n            ...uptimes.filter(({ name }) => {\n              return name !== data.macAddress;\n            })\n          ]);\n          break;\n        case \"button\":\n        case \"ask\":\n        case \"answer\":\n          break;\n        default:\n          console.warn(\"Unknown event\", data.event);\n      }\n    }\n  });\n\n  return (\n    <View style={styles.tabBarInfoContainer}>\n      {uptimes.map(e => (\n        <Text style={styles.tabBarInfoText} key={e.name}>\n          {e.name}:{e.time}\n        </Text>\n      ))}\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  tabBarInfoContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3\n      },\n      android: {\n        elevation: 20\n      }\n    }),\n    alignItems: \"center\",\n    backgroundColor: \"#fbfbfb\",\n    paddingVertical: 20\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    textAlign: \"center\"\n  }\n});\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { View, Button } from \"react-native\";\n\nexport default function MyButton(props) {\n  const [socket, setSocket] = useState(null);\n  return (\n    <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n      <Button\n        title=\"Press me\"\n        onPress={() => {\n          props.send({\n            event: \"button\",\n            sensor: props.sensor,\n            state: \"on\",\n            time: Date.now()\n          });\n          props.send({\n            event: \"button\",\n            sensor: props.sensor,\n            state: \"off\",\n            time: Date.now()\n          });\n        }}\n      />\n    </View>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { View, Button } from \"react-native\";\nimport { useSocketIO } from \"react-use-websocket\";\nimport SocketConfig from \"../constants/SocketsConfig\";\nimport MyButton from \"./Button\";\n\nexport default function Buttons(props) {\n  const [socket, setSocket] = useState(null);\n  const {\n    sendJsonMessage,\n    lastJsonMessage,\n    readyState,\n    getWebSocket\n  } = useSocketIO(SocketConfig.url, {\n    onOpen: () => console.log(\"opened Buttons\"),\n    share: () => true,\n    shouldReconnect: closeEvent => true,\n    onError: e => console.error,\n    onClose: e => console.log\n  });\n  return (\n    <View style={{ flex: 1, alignSelf: \"stretch\", flexDirection: \"row\" }}>\n      <MyButton send={sendJsonMessage} sensor=\"red\" />\n      <MyButton send={sendJsonMessage} sensor=\"blue\" />\n      <MyButton send={sendJsonMessage} sensor=\"green\" />\n      <MyButton send={sendJsonMessage} sensor=\"black\" />\n      <MyButton send={sendJsonMessage} sensor=\"white\" />\n      <MyButton send={sendJsonMessage} sensor=\"yellow\" />\n    </View>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { Platform, StyleSheet, Text, View, Button } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport Lights from \"../components/Lights\";\nimport StatusBar from \"../components/StatusBar\";\nimport Buttons from \"../components/Buttons\";\nimport { useSocketIO } from \"react-use-websocket\";\nimport SocketConfig from \"../constants/SocketsConfig\";\nimport { MonoText } from \"../components/StyledText\";\n\nexport default function HomeScreen() {\n  const [btnRed, setBtnRed] = useState(\"off\");\n  const [btnBlue, setBtnBlue] = useState(\"off\");\n  const [btnGreen, setBtnGreen] = useState(\"off\");\n  const [btnWhite, setBtnWhite] = useState(\"off\");\n  const [btnBlack, setBtnBlack] = useState(\"off\");\n  const [btnYellow, setBtnYellow] = useState(\"off\");\n  const {\n    sendJsonMessage,\n    lastJsonMessage,\n    readyState,\n    getWebSocket\n  } = useSocketIO(SocketConfig.url, {\n    onOpen: () => console.log(\"opened HomeScreen\"),\n    share: () => true,\n    shouldReconnect: closeEvent => true,\n    onError: e => console.error,\n    onClose: e => console.log,\n    onMessage: event => {\n      const data = JSON.parse(event.data);\n      switch (data.event) {\n        case \"button\":\n          switch (data.sensor) {\n            case \"red\":\n              setBtnRed(data.state);\n              break;\n            case \"blue\":\n              setBtnBlue(data.state);\n              break;\n            case \"green\":\n              setBtnGreen(data.state);\n              break;\n            case \"black\":\n              setBtnBlack(data.state);\n              break;\n            case \"white\":\n              setBtnWhite(data.state);\n              break;\n            case \"yellow\":\n              setBtnYellow(data.state);\n              break;\n            default:\n              console.warn(\"Unknown sensor\", data.sensor);\n          }\n          break;\n        case \"heartbeat\":\n        case \"ask\":\n        case \"answer\":\n          break;\n        default:\n          console.warn(\"Unknown event\", data.event);\n      }\n    }\n  });\n  return (\n    <View style={styles.container}>\n      <ScrollView\n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <View style={styles.getStartedContainer}>\n          <View\n            style={{\n              flex: 1,\n              width: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"center\"\n            }}\n          >\n            <View\n              style={{ flex: 1, alignSelf: \"stretch\", flexDirection: \"row\" }}\n            >\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"red\"\n                }}\n              >\n                <Text style={styles.getStartedText}>Red</Text>\n              </View>\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"blue\"\n                }}\n              >\n                <Text style={styles.getStartedText}>Blue</Text>\n              </View>\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"green\"\n                }}\n              >\n                <Text style={styles.getStartedText}>Green</Text>\n              </View>\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"black\"\n                }}\n              >\n                <Text style={styles.getStartedText}>Black</Text>\n              </View>\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"white\"\n                }}\n              >\n                <Text style={styles.getStartedText}>White</Text>\n              </View>\n              <View\n                style={{\n                  flex: 1,\n                  alignSelf: \"stretch\",\n                  backgroundColor: \"yellow\"\n                }}\n              >\n                <Text style={styles.getStartedText}>Yellow</Text>\n              </View>\n            </View>\n            <View\n              style={{ flex: 1, alignSelf: \"stretch\", flexDirection: \"row\" }}\n            >\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnRed === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnRed}\n                </Text>\n              </View>\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnBlue === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnBlue}\n                </Text>\n              </View>\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnGreen === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnGreen}\n                </Text>\n              </View>\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnBlack === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnBlack}\n                </Text>\n              </View>\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnWhite === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnWhite}\n                </Text>\n              </View>\n              <View style={{ flex: 1, alignSelf: \"stretch\" }}>\n                <Text\n                  style={{\n                    fontSize: 17,\n                    lineHeight: 24,\n                    textAlign: \"center\",\n                    backgroundColor: btnYellow === \"on\" ? \"green\" : \"red\"\n                  }}\n                >\n                  {btnYellow}\n                </Text>\n              </View>\n            </View>\n            <Buttons />\n          </View>\n        </View>\n        <Lights />\n      </ScrollView>\n      <StatusBar />\n    </View>\n  );\n}\n\nHomeScreen.navigationOptions = {\n  header: null\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: \"rgba(0,0,0,0.4)\",\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: \"center\"\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: \"center\",\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 100,\n    height: 80,\n    resizeMode: \"contain\",\n    marginTop: 3,\n    marginLeft: -10\n  },\n  getStartedContainer: {\n    alignItems: \"center\",\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: \"rgba(96,100,109, 0.8)\"\n  },\n  codeHighlightContainer: {\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    lineHeight: 24,\n    textAlign: \"center\"\n  },\n  tabBarInfoContainer: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: \"black\",\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3\n      },\n      android: {\n        elevation: 20\n      }\n    }),\n    alignItems: \"center\",\n    backgroundColor: \"#fbfbfb\",\n    paddingVertical: 20\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: \"rgba(96,100,109, 1)\",\n    textAlign: \"center\"\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: \"center\"\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: \"#2e78b7\"\n  }\n});\n","import * as React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport { RectButton, ScrollView } from \"react-native-gesture-handler\";\n\nexport default function LinksScreen() {\n  return (\n    <ScrollView\n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n    >\n      <OptionButton\n        icon=\"md-speedometer\"\n        label=\"See the client GitHub repository\"\n        onPress={() =>\n          WebBrowser.openBrowserAsync(\n            \"https://github.com/cesar-richard/universe-client\"\n          )\n        }\n      />\n      <OptionButton\n        icon=\"md-cog\"\n        label=\"See the server GitHub repository\"\n        onPress={() =>\n          WebBrowser.openBrowserAsync(\n            \"https://github.com/cesar-richard/universe\"\n          )\n        }\n      />\n      <OptionButton\n        icon=\"md-bug\"\n        label=\"See the NodeMCU GitHub repository\"\n        onPress={() =>\n          WebBrowser.openBrowserAsync(\n            \"https://github.com/cesar-richard/universe\"\n          )\n        }\n      />\n    </ScrollView>\n  );\n}\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n  return (\n    <RectButton\n      style={[styles.option, isLastOption && styles.lastOption]}\n      onPress={onPress}\n    >\n      <View style={{ flexDirection: \"row\" }}>\n        <View style={styles.optionIconContainer}>\n          <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n        </View>\n        <View style={styles.optionTextContainer}>\n          <Text style={styles.optionText}>{label}</Text>\n        </View>\n      </View>\n    </RectButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fafafa\"\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: \"#fdfdfd\",\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: \"#ededed\"\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: \"flex-start\",\n    marginTop: 1\n  }\n});\n","import * as React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport LinksScreen from \"../screens/LinksScreen\";\n\nconst BottomTab = createBottomTabNavigator();\nconst INITIAL_ROUTE_NAME = \"Home\";\n\nexport default function BottomTabNavigator({ navigation, route }) {\n  // Set the header title on the parent stack navigator depending on the\n  // currently active tab. Learn more in the documentation:\n  // https://reactnavigation.org/docs/en/screen-options-resolution.html\n  navigation.setOptions({ headerTitle: getHeaderTitle(route) });\n\n  return (\n    <BottomTab.Navigator initialRouteName={INITIAL_ROUTE_NAME}>\n      <BottomTab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          title: \"Control\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"md-code-working\" />\n          )\n        }}\n      />\n      <BottomTab.Screen\n        name=\"Links\"\n        component={LinksScreen}\n        options={{\n          title: \"About\",\n          tabBarIcon: ({ focused }) => (\n            <TabBarIcon focused={focused} name=\"md-book\" />\n          )\n        }}\n      />\n    </BottomTab.Navigator>\n  );\n}\n\nfunction getHeaderTitle(route) {\n  const routeName =\n    route.state?.routes[route.state.index]?.name ?? INITIAL_ROUTE_NAME;\n\n  switch (routeName) {\n    case \"Home\":\n      return \"Control\";\n    case \"Links\":\n      return \"Links to learn more\";\n  }\n}\n","import * as React from \"react\";\nimport { Platform, StatusBar, StyleSheet, View } from \"react-native\";\nimport { SplashScreen } from \"expo\";\nimport * as Font from \"expo-font\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport useLinking from \"./navigation/useLinking\";\n\nconst Stack = createStackNavigator();\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          \"space-mono\": require(\"./assets/fonts/SpaceMono-Regular.ttf\")\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === \"ios\" && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer\n          ref={containerRef}\n          initialState={initialNavigationState}\n        >\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});\n","import { useLinking } from '@react-navigation/native';\nimport { Linking } from 'expo';\n\nexport default function(containerRef) {\n  return useLinking(containerRef, {\n    prefixes: [Linking.makeUrl('/')],\n    config: {\n      Root: {\n        path: 'root',\n        screens: {\n          Home: 'home',\n          Links: 'links',\n          Settings: 'settings',\n        },\n      },\n    },\n  });\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/universe-client/expo-service-worker.js', { scope: '/universe-client/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"./fonts/SpaceMono-Regular.ttf\";"],"sourceRoot":""}